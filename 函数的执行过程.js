理论:
首先会产生一个函数执行环境，然后js引擎会把这个执行环境放到函数调用栈中。
函数开始执行，根据代码顺序执行，遇到变量赋值时， 给对应的变量赋值。
函数执行完毕后，局部活动对象就会被销毁，内存中仅保存全局作用域。



实际:
1:创建函数，生成函数作用域
2:创建函数的执行上下文，压入执行上下文栈中
3:将函数的作用域复制给函数的执行上下文
4:生成活动对象，声明函数、变量、加入形参
5:将活动对象，放到作用域的最顶端
6:执行函数
7:执行栈 弹出函数执行上下文